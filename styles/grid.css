/* always and forever */
* { box-sizing: border-box; }

main {
  background: rgba(255, 0, 255, 0.2);
  width: 68rem;
  margin: 0 auto;
}

header {
  background: #eee;
  margin-bottom: 2rem;
  padding: 0.5rem 1rem;
}

.content {
  background: #eee;
  font-size: 2rem;
  padding: 1rem;
  text-align: center;
}

/* Anything can be a grid! */
.grid {
  display: flex;
  flex-wrap: wrap;
}

/* telling css that columns shouldn't flex, but generic cells should */
.grid > [class^="grid-"] { flex: none; } /*for descendants of .grid, classes that start w/ grid-, don't flex*/
.grid > .grid-cell { flex: 1; }/*for descendants direct of .grid, class grid-cell will flex 1*/

/* relative widths for each column size */
.grid-col-1  { width: 8.3333%; }
.grid-col-2  { width: 16.6667%; }
.grid-col-3  { width: 25%; }
.grid-col-4  { width: 33.3333%; }
.grid-col-5  { width: 41.6667%; }
.grid-col-6  { width: 50%; }
.grid-col-7  { width: 58.3333%; }
.grid-col-8  { width: 66.6667%; }
.grid-col-9  { width: 75%; }
.grid-col-10 { width: 83.3333%; }
.grid-col-11 { width: 91.6667%; }


/* Adding gutters to the grid */
.grid-guttered > [class^="grid-"] {
  padding: 1rem 1rem 0 0;
}
/*last child - removes padding on the right*/
.grid-guttered > [class^="grid-"]:last-child {
  padding-right: 0;
}

/* make any element's content vertically & horizontally centered */
/* this is great for links & buttons */
.centered-content {
  display: flex;
  justify-content: center;
  align-items: center;
}
